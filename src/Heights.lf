target CCPP {
    cmake-include: ["../inc/cmake-extras.txt"],
    keepalive: true,
    clock-sync:on
//    coordination: decentralized
}

reactor Heights {
        preamble {=
            #define _GNU_SOURCE
            #include <unistd.h>
            #include <stdint.h>

            struct VL6180XSet;

            struct VL6180XSet *VL6180XSet_Setup(uint8_t i2c_bus, uint8_t ndev, const uint8_t *gpios);
            void VL6180XSet_Start(struct VL6180XSet *handle);
            void VL6180XSet_Read(struct VL6180XSet *handle, uint8_t *buffer);

            #include <sys/resource.h>

            #define MDSPLUS_EVENT "BAGEL_HEIGHTS"

            static struct  VL6180XSet *tofs = NULL;
            static double start_time;
            #define CURRENT_CHANNEL 1
            #define TOF_I2C_CHAN 3
            #define TOF_NUM 4
            const uint8_t TOF_GPIOS[] = {16, 17, 25, 27};

  =}

  reaction(startup) {=
    tofs = VL6180XSet_Setup(TOF_I2C_CHAN, TOF_NUM, TOF_GPIOS);
  =}

    output[4] heights : uint8_t
    timer t(0, 10 ms)

  reaction(t) -> heights {=
    float now;
//    float samples[4];
    uint8_t raw[4];
    uint64_t nowi;
    // MDSplus::Uint8Array *data;

    VL6180XSet_Read(tofs, raw);
    for (int i=0; i<4; i++) {
//        samples[i] = raw[i];
         lf_set(heights[i], raw[i]);
    }
//    lf_set(samples, raw);
    usleep(1500);
    VL6180XSet_Start(tofs);
  =}
}
