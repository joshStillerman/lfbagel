target CCPP {
    cmake-include: ["../inc/cmake-current-extras.txt"],
    keepalive: true,
    files: ["Adafruit_ADS1X15.h","Adafruit_ADS1X15.cpp", "ADS1X15.h", "tiny_gpio.c", "tiny_gpio.h", "i2c.c", "i2c.h"],
    clock-sync: true
}

preamble {=
            #include "Adafruit_ADS1X15.h"
=}
reactor Current {
        preamble {=
            #include <unistd.h>
            #include <stdint.h>
            #include "i2c.h"
            #define POLARITY -1
            #define CURRENT_CHANNEL 1
            i2c bus;

            static void start_read_current(Adafruit_ADS1115 *adc)
            {
                adc->startADC_SingleEnded(CURRENT_CHANNEL);
            }

            static float get_current(Adafruit_ADS1115 *adc)
            {
                float volts;
                volts = adc->computeVolts(adc->getLastConversionResults());
                return POLARITY * 10 * (volts - 2.5) ;
            }
  =}

    output current : float
    timer t(0, 10 ms)
    state adc : {= Adafruit_ADS1115 * =}

  reaction(startup) {=
            bus = i2c_open("/dev/i2c-1");

            self->adc = new Adafruit_ADS1115();
            self->adc->begin(ADS1X15_ADDRESS, bus);
            self->adc->setGain(GAIN_ONE); // to 4.096V max
            start_read_current(self->adc);
  =}

  reaction(t) -> current {=
    lf_set(current, get_current(self->adc));
    start_read_current(self->adc);
  =}
}
